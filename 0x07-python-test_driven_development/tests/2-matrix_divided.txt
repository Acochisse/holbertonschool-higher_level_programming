>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ac0chisse/Holberton/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 28, in matrix_divided
    raise ZeroDivisionError('division by zero')
ZeroDivisionError: division by zero
>>> print(matrix_divided())
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix = None
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ac0chisse/Holberton/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 12, in matrix_divided
    if not isinstance(matrix[0], list):
TypeError: 'NoneType' object is not subscriptable
>>> matrix1 = [[1, 2, 3], [4, 5, 6]]
>>> matrix2 = [[1, 2], [3, 4]]
>>> print(matrix_divided(matrix1, matrix2)
... print(matrix_divided(matrix1, matrix2))
  File "<stdin>", line 2
    print(matrix_divided(matrix1, matrix2))
        ^
SyntaxError: invalid syntax
